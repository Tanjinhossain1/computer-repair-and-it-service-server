// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  password            String
  role                String
  firstName           String
  lastName            String
  middleName          String?
  dateOfBirth         String
  gender              String?
  bloodGroup          String?
  email               String    @unique
  contactNo           String
  emergencyContactNo  String?
  presentAddress      String?
  permanentAddress    String?
  roleBasedPermission String?
  profileImage        String?
  createAt            DateTime  @default(now())
  updateAt            DateTime  @updatedAt
  booking             Booking[]
  review              Review[]
  feedback Feedback[]
}

model Service {
  id              Int       @id @default(autoincrement())
  title           String
  description     String
  image           String
  price           Int
  status          String
  category        String
  serviceLocation String
  createAt        DateTime  @default(now())
  updateAt        DateTime  @updatedAt
  rating          Int?
  booking         Booking[]
  review          Review[]
}

model Booking {
  id         Int      @id @default(autoincrement())
  serviceId  Int
  userId     Int
  startDate  DateTime
  endDate    DateTime
  bookStatus String
  service    Service  @relation(fields: [serviceId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
}

model BlogPost {
  id                  Int      @id @default(autoincrement())
  title               String
  topShortDescription String
  image               String
  description         String
  createAt            DateTime @default(now())
  updateAt            DateTime @updatedAt
}

model Faqs {
  id       Int      @id @default(autoincrement())
  question String
  ans      String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  serviceId Int
  userId    Int
  review String
  rating Int?
  service   Service  @relation(fields: [serviceId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Feedback {
  id        Int      @id @default(autoincrement()) 
  userId    Int
  comment String?
  suggestion String?
  user      User     @relation(fields: [userId], references: [id])
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}
